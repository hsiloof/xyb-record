{"version":3,"file":"pinia-plugin-persistedstate-RV7uh3T-.js","sources":["../../node_modules/pinia-plugin-persistedstate/dist/index.mjs"],"sourcesContent":["// src/normalize.ts\nfunction isObject(v) {\n  return typeof v === \"object\" && v !== null;\n}\nfunction normalizeOptions(options, factoryOptions) {\n  options = isObject(options) ? options : /* @__PURE__ */ Object.create(null);\n  return new Proxy(options, {\n    get(target, key, receiver) {\n      if (key === \"key\")\n        return Reflect.get(target, key, receiver);\n      return Reflect.get(target, key, receiver) || Reflect.get(factoryOptions, key, receiver);\n    }\n  });\n}\n\n// src/pick.ts\nfunction get(state, path) {\n  return path.reduce((obj, p) => {\n    return obj == null ? void 0 : obj[p];\n  }, state);\n}\nfunction set(state, path, val) {\n  return path.slice(0, -1).reduce((obj, p) => {\n    if (/^(__proto__)$/.test(p))\n      return {};\n    else\n      return obj[p] = obj[p] || {};\n  }, state)[path[path.length - 1]] = val, state;\n}\nfunction pick(baseState, paths) {\n  return paths.reduce((substate, path) => {\n    const pathArray = path.split(\".\");\n    return set(substate, pathArray, get(baseState, pathArray));\n  }, {});\n}\n\n// src/plugin.ts\nfunction parsePersistence(factoryOptions, store) {\n  return (o) => {\n    var _a;\n    try {\n      const {\n        storage = localStorage,\n        beforeRestore = void 0,\n        afterRestore = void 0,\n        serializer = {\n          serialize: JSON.stringify,\n          deserialize: JSON.parse\n        },\n        key = store.$id,\n        paths = null,\n        debug = false\n      } = o;\n      return {\n        storage,\n        beforeRestore,\n        afterRestore,\n        serializer,\n        key: ((_a = factoryOptions.key) != null ? _a : (k) => k)(typeof key == \"string\" ? key : key(store.$id)),\n        paths,\n        debug\n      };\n    } catch (e) {\n      if (o.debug)\n        console.error(\"[pinia-plugin-persistedstate]\", e);\n      return null;\n    }\n  };\n}\nfunction hydrateStore(store, { storage, serializer, key, debug }) {\n  try {\n    const fromStorage = storage == null ? void 0 : storage.getItem(key);\n    if (fromStorage)\n      store.$patch(serializer == null ? void 0 : serializer.deserialize(fromStorage));\n  } catch (e) {\n    if (debug)\n      console.error(\"[pinia-plugin-persistedstate]\", e);\n  }\n}\nfunction persistState(state, { storage, serializer, key, paths, debug }) {\n  try {\n    const toStore = Array.isArray(paths) ? pick(state, paths) : state;\n    storage.setItem(key, serializer.serialize(toStore));\n  } catch (e) {\n    if (debug)\n      console.error(\"[pinia-plugin-persistedstate]\", e);\n  }\n}\nfunction createPersistedState(factoryOptions = {}) {\n  return (context) => {\n    const { auto = false } = factoryOptions;\n    const {\n      options: { persist = auto },\n      store,\n      pinia\n    } = context;\n    if (!persist)\n      return;\n    if (!(store.$id in pinia.state.value)) {\n      const original_store = pinia._s.get(store.$id.replace(\"__hot:\", \"\"));\n      if (original_store)\n        Promise.resolve().then(() => original_store.$persist());\n      return;\n    }\n    const persistences = (Array.isArray(persist) ? persist.map((p) => normalizeOptions(p, factoryOptions)) : [normalizeOptions(persist, factoryOptions)]).map(parsePersistence(factoryOptions, store)).filter(Boolean);\n    store.$persist = () => {\n      persistences.forEach((persistence) => {\n        persistState(store.$state, persistence);\n      });\n    };\n    store.$hydrate = ({ runHooks = true } = {}) => {\n      persistences.forEach((persistence) => {\n        const { beforeRestore, afterRestore } = persistence;\n        if (runHooks)\n          beforeRestore == null ? void 0 : beforeRestore(context);\n        hydrateStore(store, persistence);\n        if (runHooks)\n          afterRestore == null ? void 0 : afterRestore(context);\n      });\n    };\n    persistences.forEach((persistence) => {\n      const { beforeRestore, afterRestore } = persistence;\n      beforeRestore == null ? void 0 : beforeRestore(context);\n      hydrateStore(store, persistence);\n      afterRestore == null ? void 0 : afterRestore(context);\n      store.$subscribe(\n        (_mutation, state) => {\n          persistState(state, persistence);\n        },\n        {\n          detached: true\n        }\n      );\n    });\n  };\n}\n\n// src/index.ts\nvar src_default = createPersistedState();\nexport {\n  createPersistedState,\n  src_default as default\n};\n"],"names":["isObject","v","normalizeOptions","options","factoryOptions","target","key","receiver","get","state","path","obj","p","set","val","pick","baseState","paths","substate","pathArray","parsePersistence","store","o","_a","storage","beforeRestore","afterRestore","serializer","debug","k","hydrateStore","fromStorage","e","persistState","toStore","createPersistedState","context","auto","persist","pinia","original_store","persistences","persistence","runHooks","_mutation","src_default"],"mappings":"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","x_google_ignoreList":[0]}